vendor_name = ModelSim
source_file = 1, C:/xampp/htdocs/projects/VHDL/divisor_binario/divisor_binario.vhd
source_file = 1, C:/xampp/htdocs/projects/VHDL/divisor_binario/db/divisor_binario.cbx.xml
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = divisor_binario
instance = comp, \B[0]\, B[0], divisor_binario, 1
instance = comp, \B[2]\, B[2], divisor_binario, 1
instance = comp, \B[3]\, B[3], divisor_binario, 1
instance = comp, \CLK~I\, CLK, divisor_binario, 1
instance = comp, \CLK~clkctrl\, CLK~clkctrl, divisor_binario, 1
instance = comp, \Selector0~0\, Selector0~0, divisor_binario, 1
instance = comp, \RESET~I\, RESET, divisor_binario, 1
instance = comp, \RESET~clkctrl\, RESET~clkctrl, divisor_binario, 1
instance = comp, \estado.PARADO\, estado.PARADO, divisor_binario, 1
instance = comp, \Selector14~0\, Selector14~0, divisor_binario, 1
instance = comp, \INICIAR~I\, INICIAR, divisor_binario, 1
instance = comp, \Q[0]~0\, Q[0]~0, divisor_binario, 1
instance = comp, \P[0]\, P[0], divisor_binario, 1
instance = comp, \Add1~0\, Add1~0, divisor_binario, 1
instance = comp, \P[1]\, P[1], divisor_binario, 1
instance = comp, \Selector2~0\, Selector2~0, divisor_binario, 1
instance = comp, \Selector1~0\, Selector1~0, divisor_binario, 1
instance = comp, \estado.MUL0\, estado.MUL0, divisor_binario, 1
instance = comp, \estado.MUL1\, estado.MUL1, divisor_binario, 1
instance = comp, \MULT_IN[2]~I\, MULT_IN[2], divisor_binario, 1
instance = comp, \M[2]~feeder\, M[2]~feeder, divisor_binario, 1
instance = comp, \ENTRA_MULTIPLICADOR~I\, ENTRA_MULTIPLICADOR, divisor_binario, 1
instance = comp, \M[2]\, M[2], divisor_binario, 1
instance = comp, \Add0~0\, Add0~0, divisor_binario, 1
instance = comp, \MULT_IN[1]~I\, MULT_IN[1], divisor_binario, 1
instance = comp, \ENTRA_MULTIPLICANDO~I\, ENTRA_MULTIPLICANDO, divisor_binario, 1
instance = comp, \B[1]\, B[1], divisor_binario, 1
instance = comp, \Add0~2\, Add0~2, divisor_binario, 1
instance = comp, \Selector7~0\, Selector7~0, divisor_binario, 1
instance = comp, \Selector2~1\, Selector2~1, divisor_binario, 1
instance = comp, \estado.FIM\, estado.FIM, divisor_binario, 1
instance = comp, \Q[0]~1\, Q[0]~1, divisor_binario, 1
instance = comp, \A[0]~0\, A[0]~0, divisor_binario, 1
instance = comp, \A[1]\, A[1], divisor_binario, 1
instance = comp, \Selector8~0\, Selector8~0, divisor_binario, 1
instance = comp, \A[0]\, A[0], divisor_binario, 1
instance = comp, \MULT_IN[3]~I\, MULT_IN[3], divisor_binario, 1
instance = comp, \M[3]~feeder\, M[3]~feeder, divisor_binario, 1
instance = comp, \M[3]\, M[3], divisor_binario, 1
instance = comp, \Selector9~0\, Selector9~0, divisor_binario, 1
instance = comp, \Q[3]\, Q[3], divisor_binario, 1
instance = comp, \Selector10~0\, Selector10~0, divisor_binario, 1
instance = comp, \Q[2]\, Q[2], divisor_binario, 1
instance = comp, \M[1]~feeder\, M[1]~feeder, divisor_binario, 1
instance = comp, \M[1]\, M[1], divisor_binario, 1
instance = comp, \Selector11~0\, Selector11~0, divisor_binario, 1
instance = comp, \Q[1]\, Q[1], divisor_binario, 1
instance = comp, \MULT_IN[0]~I\, MULT_IN[0], divisor_binario, 1
instance = comp, \M[0]\, M[0], divisor_binario, 1
instance = comp, \Selector12~0\, Selector12~0, divisor_binario, 1
instance = comp, \Q[0]\, Q[0], divisor_binario, 1
instance = comp, \Add0~4\, Add0~4, divisor_binario, 1
instance = comp, \Add0~6\, Add0~6, divisor_binario, 1
instance = comp, \Add0~8\, Add0~8, divisor_binario, 1
instance = comp, \Selector4~0\, Selector4~0, divisor_binario, 1
instance = comp, \Selector4~1\, Selector4~1, divisor_binario, 1
instance = comp, \Selector5~0\, Selector5~0, divisor_binario, 1
instance = comp, \A[3]\, A[3], divisor_binario, 1
instance = comp, \Selector6~0\, Selector6~0, divisor_binario, 1
instance = comp, \A[2]\, A[2], divisor_binario, 1
instance = comp, \Selector3~0\, Selector3~0, divisor_binario, 1
instance = comp, \PRONTO~reg0\, PRONTO~reg0, divisor_binario, 1
instance = comp, \MULT_OUT[0]~I\, MULT_OUT[0], divisor_binario, 1
instance = comp, \MULT_OUT[1]~I\, MULT_OUT[1], divisor_binario, 1
instance = comp, \MULT_OUT[2]~I\, MULT_OUT[2], divisor_binario, 1
instance = comp, \MULT_OUT[3]~I\, MULT_OUT[3], divisor_binario, 1
instance = comp, \MULT_OUT[4]~I\, MULT_OUT[4], divisor_binario, 1
instance = comp, \MULT_OUT[5]~I\, MULT_OUT[5], divisor_binario, 1
instance = comp, \MULT_OUT[6]~I\, MULT_OUT[6], divisor_binario, 1
instance = comp, \MULT_OUT[7]~I\, MULT_OUT[7], divisor_binario, 1
instance = comp, \PRONTO~I\, PRONTO, divisor_binario, 1
